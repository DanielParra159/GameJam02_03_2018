//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class FallesContext {

    public FallesEntity myTestEntity { get { return GetGroup(FallesMatcher.MyTest).GetSingleEntity(); } }
    public MyTestComponent myTest { get { return myTestEntity.myTest; } }
    public bool hasMyTest { get { return myTestEntity != null; } }

    public FallesEntity SetMyTest(string newFallera, int newAlgo) {
        if (hasMyTest) {
            throw new Entitas.EntitasException("Could not set MyTest!\n" + this + " already has an entity with MyTestComponent!",
                "You should check if the context already has a myTestEntity before setting it or use context.ReplaceMyTest().");
        }
        var entity = CreateEntity();
        entity.AddMyTest(newFallera, newAlgo);
        return entity;
    }

    public void ReplaceMyTest(string newFallera, int newAlgo) {
        var entity = myTestEntity;
        if (entity == null) {
            entity = SetMyTest(newFallera, newAlgo);
        } else {
            entity.ReplaceMyTest(newFallera, newAlgo);
        }
    }

    public void RemoveMyTest() {
        myTestEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class FallesEntity {

    public MyTestComponent myTest { get { return (MyTestComponent)GetComponent(FallesComponentsLookup.MyTest); } }
    public bool hasMyTest { get { return HasComponent(FallesComponentsLookup.MyTest); } }

    public void AddMyTest(string newFallera, int newAlgo) {
        var index = FallesComponentsLookup.MyTest;
        var component = CreateComponent<MyTestComponent>(index);
        component.fallera = newFallera;
        component.algo = newAlgo;
        AddComponent(index, component);
    }

    public void ReplaceMyTest(string newFallera, int newAlgo) {
        var index = FallesComponentsLookup.MyTest;
        var component = CreateComponent<MyTestComponent>(index);
        component.fallera = newFallera;
        component.algo = newAlgo;
        ReplaceComponent(index, component);
    }

    public void RemoveMyTest() {
        RemoveComponent(FallesComponentsLookup.MyTest);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class FallesMatcher {

    static Entitas.IMatcher<FallesEntity> _matcherMyTest;

    public static Entitas.IMatcher<FallesEntity> MyTest {
        get {
            if (_matcherMyTest == null) {
                var matcher = (Entitas.Matcher<FallesEntity>)Entitas.Matcher<FallesEntity>.AllOf(FallesComponentsLookup.MyTest);
                matcher.componentNames = FallesComponentsLookup.componentNames;
                _matcherMyTest = matcher;
            }

            return _matcherMyTest;
        }
    }
}
